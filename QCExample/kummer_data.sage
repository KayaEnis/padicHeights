def kummer_equation(f, xs):
	f0,f1,f2,f3,f4,f5 = tuple(f.coefficients(sparse = False))
	f6 = 0
	x1,x2,x3,x4 = tuple(xs)
	return (-4*f0*f2 + f1^2)*x1^4 - 4*f0*f3*x1^3*x2 - 2*f1*f3*x1^3*x3 - 4*f0*x1^3*x4 - 4*f0*f4*x1^2*x2^2 + (4*f0*f5 - 4*f1*f4)*x1^2*x2*x3 - 2*f1*x1^2*x2*x4 + (-4*f0*f6 + 2*f1*f5 - 4*f2*f4 + f3^2)*x1^2*x3^2 - 4*f2*x1^2*x3*x4 - 4*f0*f5*x1*x2^3 + (8*f0*f6 - 4*f1*f5)*x1*x2^2*x3 + (4*f1*f6 - 4*f2*f5)*x1*x2*x3^2 - 2*f3*x1*x2*x3*x4 - 2*f3*f5*x1*x3^3 - 4*f4*x1*x3^2*x4 - 4*x1*x3*x4^2 - 4*f0*f6*x2^4 - 4*f1*f6*x2^3*x3 - 4*f2*f6*x2^2*x3^2 + x2^2*x4^2 - 4*f3*f6*x2*x3^3 - 2*f5*x2*x3^2*x4 + (-4*f4*f6 + f5^2)*x3^4 - 4*f6*x3^3*x4


def kummer_deltas(f, xs):
	f0,f1,f2,f3,f4,f5 = tuple(f.coefficients(sparse = False))
	f6 = 0
	x1,x2,x3,x4 = tuple(xs)
	deltas =   [    (-16*f0^2*f6 - 16*f0*f2*f4 + 4*f0*f3^2 + 4*f1^2*f4)*x1^4 + (-16*f0*f1*f6 - 32*f0*f2*f5 + 8*f1^2*f5)*x1^3*x2 + (32*f0*f2*f6 - 16*f0*f3*f5 - 16*f1^2*f6)*x1^3*x3 + (-16*f0*f4 + 4*f1*f3)*x1^3*x4 + (-64*f0*f2*f6 - 8*f0*f3*f5 + 12*f1^2*f6)*x1^2*x2^2 + (-16*f0*f4*f5 - 16*f1*f2*f6 - 4*f1*f3*f5)*x1^2*x2*x3 - 32*f0*f5*x1^2*x2*x4 + (-48*f0*f4*f6 + 16*f0*f5^2 + 24*f1*f3*f6 - 8*f1*f4*f5 - 16*f2^2*f6)*x1^2*x3^2 - 8*f1*f5*x1^2*x3*x4 + 4*f2*x1^2*x4^2 - 32*f0*f3*f6*x1*x2^3 + (-16*f0*f5^2 - 24*f1*f3*f6)*x1*x2^2*x3 + (-48*f0*f6 - 4*f1*f5)*x1*x2^2*x4 + (-16*f0*f5*f6 - 8*f1*f5^2 - 16*f2*f3*f6)*x1*x2*x3^2 + (-24*f1*f6 - 8*f2*f5)*x1*x2*x3*x4 + (32*f0*f6^2 - 16*f1*f5*f6 - 8*f3^2*f6)*x1*x3^3 + (-16*f2*f6 - 4*f3*f5)*x1*x3^2*x4 + 4*x1*x4^3 + (-16*f0*f4*f6 + 4*f0*f5^2)*x2^4 + (-16*f0*f5*f6 - 16*f1*f4*f6 + 4*f1*f5^2)*x2^3*x3 - 8*f1*f6*x2^3*x4 + (-48*f0*f6^2 - 8*f1*f5*f6 - 16*f2*f4*f6 + 4*f2*f5^2)*x2^2*x3^2 - 16*f2*f6*x2^2*x3*x4 + (-32*f1*f6^2 - 16*f3*f4*f6 + 4*f3*f5^2)*x2*x3^3 - 24*f3*f6*x2*x3^2*x4 - 4*f5*x2*x3*x4^2 + (-16*f2*f6^2 + 8*f3*f5*f6 - 16*f4^2*f6 + 4*f4*f5^2)*x3^4 + (-32*f4*f6 + 8*f5^2)*x3^3*x4 - 12*f6*x3^2*x4^2, (16*f0^2*f5 - 4*f0*f2*f3 + f1^2*f3)*x1^4 + (32*f0^2*f6 + 16*f0*f1*f5 - 4*f0*f3^2)*x1^3*x2 + (-32*f0*f2*f5 + 16*f0*f3*f4 + 16*f1^2*f5 - 6*f1*f3^2)*x1^3*x3 + 4*f0*f3*x1^3*x4 + (32*f0*f1*f6 - 4*f0*f3*f4 + 4*f1^2*f5)*x1^2*x2^2 + (-64*f0*f2*f6 - 20*f0*f3*f5 + 32*f0*f4^2 + 32*f1^2*f6 + 16*f1*f2*f5 - 12*f1*f3*f4)*x1^2*x2*x3 + (16*f0*f4 + 2*f1*f3)*x1^2*x2*x4 + (-20*f0*f3*f6 - 14*f1*f3*f5 + 16*f1*f4^2 + 16*f2^2*f5 - 20*f2*f3*f4 + 5*f3^3)*x1^2*x3^2 + (-16*f0*f5 + 16*f1*f4 - 12*f2*f3)*x1^2*x3*x4 + 4*f1*x1^2*x4^2 + (-4*f0*f3*f5 + 8*f1^2*f6)*x1*x2^3 + (-56*f0*f3*f6 + 32*f0*f4*f5 + 32*f1*f2*f6 - 8*f1*f3*f5)*x1*x2^2*x3 + (8*f0*f5 + 8*f1*f4)*x1*x2^2*x4 + (-64*f0*f4*f6 + 32*f0*f5^2 - 20*f1*f3*f6 + 16*f1*f4*f5 + 32*f2^2*f6 - 12*f2*f3*f5)*x1*x2*x3^2 + (-48*f0*f6 + 16*f1*f5 + 16*f2*f4 - 10*f3^2)*x1*x2*x3*x4 + 8*f2*x1*x2*x4^2 + (-32*f1*f4*f6 + 16*f1*f5^2 + 16*f2*f3*f6 - 6*f3^2*f5)*x1*x3^3 + (-16*f1*f6 + 16*f2*f5 - 12*f3*f4)*x1*x3^2*x4 - 8*f3*x1*x3*x4^2 - 4*f0*f3*f6*x2^4 + (8*f0*f5^2 - 4*f1*f3*f6)*x2^3*x3 + 4*f1*f5*x2^3*x4 + (32*f0*f5*f6 + 4*f1*f5^2 - 4*f2*f3*f6)*x2^2*x3^2 + (8*f1*f6 + 8*f2*f5)*x2^2*x3*x4 + 5*f3*x2^2*x4^2 + (32*f0*f6^2 + 16*f1*f5*f6 - 4*f3^2*f6)*x2*x3^3 + (16*f2*f6 + 2*f3*f5)*x2*x3^2*x4 + 8*f4*x2*x3*x4^2 + 4*x2*x4^3 + (16*f1*f6^2 - 4*f3*f4*f6 + f3*f5^2)*x3^4 + 4*f3*f6*x3^3*x4 + 4*f5*x3^2*x4^2,
    (-16*f0^2*f4 + 8*f0*f1*f3 - 16*f0*f2^2 + 4*f1^2*f2)*x1^4 + (-32*f0^2*f5 - 16*f0*f2*f3 + 4*f1^2*f3)*x1^3*x2 + (32*f0^2*f6 - 16*f0*f1*f5 - 8*f0*f3^2)*x1^3*x3 + (-32*f0*f2 + 8*f1^2)*x1^3*x4 + (-48*f0^2*f6 - 8*f0*f1*f5 - 16*f0*f2*f4 + 4*f1^2*f4)*x1^2*x2^2 + (-16*f0*f1*f6 - 16*f0*f3*f4 - 8*f1^2*f5)*x1^2*x2*x3 - 24*f0*f3*x1^2*x2*x4 + (-48*f0*f2*f6 + 24*f0*f3*f5 - 16*f0*f4^2 + 16*f1^2*f6 - 8*f1*f2*f5)*x1^2*x3^2 + (-16*f0*f4 - 4*f1*f3)*x1^2*x3*x4 - 12*f0*x1^2*x4^2 + (-16*f0*f1*f6 - 16*f0*f2*f5 + 4*f1^2*f5)*x1*x2^3 + (-24*f0*f3*f5 - 16*f1^2*f6)*x1*x2^2*x3 - 16*f0*f4*x1*x2^2*x4 + (-16*f0*f4*f5 - 16*f1*f2*f6 - 4*f1*f3*f5)*x1*x2*x3^2 + (-24*f0*f5 - 8*f1*f4)*x1*x2*x3*x4 - 4*f1*x1*x2*x4^2 + (32*f0*f4*f6 - 16*f0*f5^2 - 16*f1*f3*f6)*x1*x3^3 - 8*f1*f5*x1*x3^2*x4 + (-16*f0*f2*f6 + 4*f1^2*f6)*x2^4 - 32*f0*f3*f6*x2^3*x3 - 8*f0*f5*x2^3*x4 + (-64*f0*f4*f6 + 12*f0*f5^2 - 8*f1*f3*f6)*x2^2*x3^2 + (-48*f0*f6 - 4*f1*f5)*x2^2*x3*x4 + (-16*f0*f5*f6 - 32*f1*f4*f6 + 8*f1*f5^2)*x2*x3^3 - 32*f1*f6*x2*x3^2*x4 + (-16*f0*f6^2 - 16*f2*f4*f6 + 4*f2*f5^2 + 4*f3^2*f6)*x3^4 + (-16*f2*f6 + 4*f3*f5)*x3^3*x4 + 4*f4*x3^2*x4^2 + 4*x3*x4^3,
    (16*f0^2*f2*f6 - 16*f0^2*f3*f5 + 16*f0^2*f4^2 - 4*f0*f1^2*f6 + 8*f0*f1*f2*f5 - 8*f0*f1*f3*f4 + 16*f0*f2^2*f4 - 4*f0*f2*f3^2 - 2*f1^3*f5 - 4*f1^2*f2*f4 + f1^2*f3^2)*x1^4 + (-32*f0^2*f3*f6 + 32*f0^2*f4*f5 + 32*f0*f1*f2*f6 - 16*f0*f1*f3*f5 + 32*f0*f2^2*f5 - 8*f1^3*f6 - 8*f1^2*f2*f5)*x1^3*x2 + (-64*f0^2*f4*f6 + 32*f0^2*f5^2 + 16*f0*f1*f3*f6 + 16*f0*f2*f3*f5 - 4*f1^2*f3*f5)*x1^3*x3 + (32*f0*f2*f4 - 8*f0*f3^2 - 8*f1^2*f4)*x1^3*x4 + (32*f0^2*f4*f6 + 16*f0^2*f5^2 - 24*f0*f1*f3*f6 + 64*f0*f2^2*f6 + 8*f0*f2*f3*f5 - 16*f1^2*f2*f6 - 2*f1^2*f3*f5)*x1^2*x2^2 + (64*f0^2*f5*f6 - 32*f0*f1*f4*f6 + 16*f0*f1*f5^2 + 64*f0*f2*f3*f6 + 8*f0*f3^2*f5 - 8*f1^2*f3*f6)*x1^2*x2*x3 + (48*f0*f2*f5 - 12*f1^2*f5)*x1^2*x2*x4 + (64*f0^2*f6^2 + 96*f0*f2*f4*f6 - 32*f0*f2*f5^2 - 16*f0*f3^2*f6 + 8*f0*f3*f4*f5 - 32*f1^2*f4*f6 + 12*f1^2*f5^2 + 8*f1*f2*f3*f6)*x1^2*x3^2 + (32*f0*f2*f6 + 16*f0*f3*f5 - 8*f1^2*f6)*x1^2*x3*x4 + (8*f0*f4 - 2*f1*f3)*x1^2*x4^2 + (32*f0^2*f5*f6 + 32*f0*f2*f3*f6 - 8*f1^2*f3*f6)*x1*x2^3 + (64*f0^2*f6^2 + 32*f0*f1*f5*f6 + 48*f0*f3^2*f6)*x1*x2^2*x3 + (64*f0*f2*f6 + 8*f0*f3*f5 - 16*f1^2*f6)*x1*x2^2*x4 + (64*f0*f1*f6^2 - 32*f0*f2*f5*f6 + 64*f0*f3*f4*f6 - 8*f0*f3*f5^2 + 16*f1^2*f5*f6 + 8*f1*f3^2*f6)*x1*x2*x3^2 + (80*f0*f3*f6 + 4*f1*f3*f5)*x1*x2*x3*x4 + 8*f0*f5*x1*x2*x4^2 + (-64*f0*f2*f6^2 + 16*f0*f3*f5*f6 + 32*f1^2*f6^2 + 16*f1*f3*f4*f6 - 4*f1*f3*f5^2)*x1*x3^3 + (32*f0*f4*f6 - 8*f0*f5^2 + 16*f1*f3*f6)*x1*x3^2*x4 + 16*f0*f6*x1*x3*x4^2 + (16*f0^2*f6^2 + 16*f0*f2*f4*f6 - 4*f0*f2*f5^2 - 4*f1^2*f4*f6 + f1^2*f5^2)*x2^4 + (32*f0*f1*f6^2 + 32*f0*f3*f4*f6 - 8*f0*f3*f5^2)*x2^3*x3 + 16*f0*f3*f6*x2^3*x4 + (32*f0*f2*f6^2 - 24*f0*f3*f5*f6 + 64*f0*f4^2*f6 - 16*f0*f4*f5^2 + 16*f1^2*f6^2 + 8*f1*f3*f4*f6 - 2*f1*f3*f5^2)*x2^2*x3^2 + (64*f0*f4*f6 - 16*f0*f5^2 + 8*f1*f3*f6)*x2^2*x3*x4 + 8*f0*f6*x2^2*x4^2 + (-32*f0*f3*f6^2 + 32*f0*f4*f5*f6 - 8*f0*f5^3 + 32*f1*f2*f6^2 - 16*f1*f3*f5*f6 + 32*f1*f4^2*f6 - 8*f1*f4*f5^2)*x2*x3^3 + (48*f1*f4*f6 - 12*f1*f5^2)*x2*x3^2*x4 + 8*f1*f6*x2*x3*x4^2 + (16*f0*f4*f6^2 - 4*f0*f5^2*f6 - 16*f1*f3*f6^2 + 8*f1*f4*f5*f6 - 2*f1*f5^3 + 16*f2^2*f6^2 - 8*f2*f3*f5*f6 + 16*f2*f4^2*f6 - 4*f2*f4*f5^2 - 4*f3^2*f4*f6 + f3^2*f5^2)*x3^4 + (32*f2*f4*f6 - 8*f2*f5^2 - 8*f3^2*f6)*x3^3*x4 + (8*f2*f6 - 2*f3*f5)*x3^2*x4^2 + x4^4 ]
	return deltas


def kummer_bbmatrix(f, xs, ys):
	f0,f1,f2,f3,f4,f5 = tuple(f.coefficients(sparse = False))
	f6 = 0
	x1,x2,x3,x4 = tuple(xs)
	y1,y2,y3,y4 = tuple(ys)
	bbmatrix = [    [        -4*f0*f6*x1^2*y2^2 - 4*f1*f6*x1^2*y2*y3 - 4*f2*f6*x1^2*y3^2 + x1^2*y4^2 + 8*f0*f6*x1*x2*y1*y2 + 4*f1*f6*x1*x2*y1*y3 - 4*f3*f6*x1*x2*y3^2 - 
            2*f5*x1*x2*y3*y4 + 4*f1*f6*x1*x3*y1*y2 + 8*f2*f6*x1*x3*y1*y3 + 4*f3*f6*x1*x3*y2*y3 + 2*f5*x1*x3*y2*y4 + 4*f6*x1*x3*y3*y4 - 
            2*x1*x4*y1*y4 - 4*f6*x1*x4*y3^2 - 4*f0*f6*x2^2*y1^2 + (-4*f4*f6 + f5^2)*x2^2*y3^2 - 4*f6*x2^2*y3*y4 - 4*f1*f6*x2*x3*y1^2 + 
            4*f3*f6*x2*x3*y1*y3 + (8*f4*f6 - 2*f5^2)*x2*x3*y2*y3 + 4*f6*x2*x3*y2*y4 + 2*f5*x2*x4*y1*y3 + 4*f6*x2*x4*y2*y3 - 4*f2*f6*x3^2*y1^2 - 
            4*f3*f6*x3^2*y1*y2 - 4*f6*x3^2*y1*y4 + (-4*f4*f6 + f5^2)*x3^2*y2^2 - 2*f5*x3*x4*y1*y2 + 4*f6*x3*x4*y1*y3 - 4*f6*x3*x4*y2^2 + x4^2*y1^2,
        4*f0*f5*x1^2*y2^2 + (8*f0*f6 + 4*f1*f5)*x1^2*y2*y3 + (4*f1*f6 + 4*f2*f5)*x1^2*y3^2 + 2*f3*x1^2*y3*y4 - 8*f0*f5*x1*x2*y1*y2 + (-8*f0*f6 - 
            4*f1*f5)*x1*x2*y1*y3 + 4*f1*f6*x1*x2*y2*y3 + (8*f2*f6 + 2*f3*f5)*x1*x2*y3^2 + 4*f4*x1*x2*y3*y4 + 2*x1*x2*y4^2 + (-8*f0*f6 - 
            4*f1*f5)*x1*x3*y1*y2 + (-8*f1*f6 - 8*f2*f5)*x1*x3*y1*y3 - 2*f3*x1*x3*y1*y4 - 4*f1*f6*x1*x3*y2^2 + (-8*f2*f6 - 2*f3*f5)*x1*x3*y2*y3 - 
            4*f4*x1*x3*y2*y4 - 4*f5*x1*x3*y3*y4 - 2*f3*x1*x4*y1*y3 - 2*x1*x4*y2*y4 + 4*f5*x1*x4*y3^2 + 4*f0*f5*x2^2*y1^2 - 4*f1*f6*x2^2*y1*y3 
            + 4*f3*f6*x2^2*y3^2 + 2*f5*x2^2*y3*y4 + (8*f0*f6 + 4*f1*f5)*x2*x3*y1^2 + 4*f1*f6*x2*x3*y1*y2 + (-8*f2*f6 - 2*f3*f5)*x2*x3*y1*y3 - 
            8*f3*f6*x2*x3*y2*y3 - 2*f5*x2*x3*y2*y4 - 4*f6*x2*x3*y3*y4 - 4*f4*x2*x4*y1*y3 - 2*x2*x4*y1*y4 - 2*f5*x2*x4*y2*y3 + 
            4*f6*x2*x4*y3^2 + (4*f1*f6 + 4*f2*f5)*x3^2*y1^2 + (8*f2*f6 + 2*f3*f5)*x3^2*y1*y2 + 4*f5*x3^2*y1*y4 + 4*f3*f6*x3^2*y2^2 + 4*f6*x3^2*y2*y4 + 
            2*f3*x3*x4*y1^2 + 4*f4*x3*x4*y1*y2 - 4*f5*x3*x4*y1*y3 + 2*f5*x3*x4*y2^2 - 4*f6*x3*x4*y2*y3 + 2*x4^2*y1*y2,
        (8*f0*f2 - 2*f1^2)*x1^2*y1^2 + 4*f0*f3*x1^2*y1*y2 + 2*f1*f3*x1^2*y1*y3 + 4*f0*x1^2*y1*y4 - 4*f0*f5*x1^2*y2*y3 - 2*f1*f5*x1^2*y3^2 + 
            4*f0*f3*x1*x2*y1^2 + 8*f0*f4*x1*x2*y1*y2 + 4*f1*f4*x1*x2*y1*y3 + 2*f1*x1*x2*y1*y4 + 4*f0*f5*x1*x2*y2^2 + (-8*f0*f6 + 
            2*f1*f5)*x1*x2*y2*y3 - 4*f1*f6*x1*x2*y3^2 + 2*f1*f3*x1*x3*y1^2 + 4*f1*f4*x1*x3*y1*y2 + (8*f0*f6 + 8*f2*f4 - 2*f3^2)*x1*x3*y1*y3 + 
            4*f2*x1*x3*y1*y4 + 2*f1*f5*x1*x3*y2^2 + 4*f2*f5*x1*x3*y2*y3 + 2*f3*x1*x3*y2*y4 + 2*f3*f5*x1*x3*y3^2 + 4*f4*x1*x3*y3*y4 + 
            2*x1*x3*y4^2 + 4*f0*x1*x4*y1^2 + 2*f1*x1*x4*y1*y2 + 4*f2*x1*x4*y1*y3 + 2*x1*x4*y3*y4 + 4*f0*f5*x2^2*y1*y2 + 2*f1*f5*x2^2*y1*y3 + 
            8*f0*f6*x2^2*y2^2 + 4*f1*f6*x2^2*y2*y3 - 4*f0*f5*x2*x3*y1^2 + (-8*f0*f6 + 2*f1*f5)*x2*x3*y1*y2 + 4*f2*f5*x2*x3*y1*y3 + 4*f1*f6*x2*x3*y2^2 + 
            8*f2*f6*x2*x3*y2*y3 + 4*f3*f6*x2*x3*y3^2 + 2*f5*x2*x3*y3*y4 + 2*f3*x2*x4*y1*y3 - 2*x2*x4*y2*y4 - 2*f1*f5*x3^2*y1^2 - 
            4*f1*f6*x3^2*y1*y2 + 2*f3*f5*x3^2*y1*y3 + 4*f3*f6*x3^2*y2*y3 + (8*f4*f6 - 2*f5^2)*x3^2*y3^2 + 4*f6*x3^2*y3*y4 + 4*f4*x3*x4*y1*y3 + 
            2*x3*x4*y1*y4 + 2*f5*x3*x4*y2*y3 + 4*f6*x3*x4*y3^2 + 2*x4^2*y1*y3,
        (-16*f0^2*f6 - 16*f0*f2*f4 + 4*f0*f3^2 + 4*f1^2*f4)*x1^2*y1^2 + (-8*f0*f1*f6 - 16*f0*f2*f5 + 4*f1^2*f5)*x1^2*y1*y2 + (16*f0*f2*f6 - 8*f0*f3*f5 - 8*f1^2*f6)*x1^2*y1*y3
            + (-8*f0*f4 + 2*f1*f3)*x1^2*y1*y4 + (-16*f0*f2*f6 + 4*f1^2*f6)*x1^2*y2^2 - 8*f0*f3*f6*x1^2*y2*y3 - 4*f0*f5*x1^2*y2*y4 + (-16*f0*f4*f6 + 4*f0*f5^2 + 
            4*f1*f3*f6)*x1^2*y3^2 - 8*f0*f6*x1^2*y3*y4 + (-8*f0*f1*f6 - 16*f0*f2*f5 + 4*f1^2*f5)*x1*x2*y1^2 + (-32*f0*f2*f6 - 8*f0*f3*f5 + 4*f1^2*f6)*x1*x2*y1*y2 + 
            (8*f0*f3*f6 - 8*f0*f4*f5 - 8*f1*f2*f6 - 2*f1*f3*f5)*x1*x2*y1*y3 - 12*f0*f5*x1*x2*y1*y4 - 16*f0*f3*f6*x1*x2*y2^2 + (-4*f0*f5^2 - 
            8*f1*f3*f6)*x1*x2*y2*y3 + (-8*f0*f6 - 2*f1*f5)*x1*x2*y2*y4 - 8*f0*f5*f6*x1*x2*y3^2 - 4*f1*f6*x1*x2*y3*y4 + (16*f0*f2*f6 - 8*f0*f3*f5 - 
            8*f1^2*f6)*x1*x3*y1^2 + (8*f0*f3*f6 - 8*f0*f4*f5 - 8*f1*f2*f6 - 2*f1*f3*f5)*x1*x3*y1*y2 + (-16*f0*f4*f6 + 8*f0*f5^2 + 16*f1*f3*f6 - 8*f1*f4*f5 - 
            16*f2^2*f6)*x1*x3*y1*y3 + (8*f0*f6 - 4*f1*f5)*x1*x3*y1*y4 + (-4*f0*f5^2 - 4*f1*f3*f6)*x1*x3*y2^2 + (-4*f1*f5^2 - 8*f2*f3*f6)*x1*x3*y2*y3 - 
            4*f2*f5*x1*x3*y2*y4 + (16*f0*f6^2 - 8*f1*f5*f6 - 4*f3^2*f6)*x1*x3*y3^2 + (-8*f2*f6 - 2*f3*f5)*x1*x3*y3*y4 + (-8*f0*f4 + 2*f1*f3)*x1*x4*y1^2 - 
            12*f0*f5*x1*x4*y1*y2 + (8*f0*f6 - 4*f1*f5)*x1*x4*y1*y3 + 4*f2*x1*x4*y1*y4 - 16*f0*f6*x1*x4*y2^2 - 8*f1*f6*x1*x4*y2*y3 + 2*x1*x4*y4^2 +
            (-16*f0*f2*f6 + 4*f1^2*f6)*x2^2*y1^2 - 16*f0*f3*f6*x2^2*y1*y2 + (-4*f0*f5^2 - 4*f1*f3*f6)*x2^2*y1*y3 - 16*f0*f6*x2^2*y1*y4 + (-16*f0*f4*f6 + 
            4*f0*f5^2)*x2^2*y2^2 + (-8*f0*f5*f6 - 8*f1*f4*f6 + 2*f1*f5^2)*x2^2*y2*y3 - 4*f1*f6*x2^2*y2*y4 - 16*f0*f6^2*x2^2*y3^2 - 8*f0*f3*f6*x2*x3*y1^2 + 
            (-4*f0*f5^2 - 8*f1*f3*f6)*x2*x3*y1*y2 + (-4*f1*f5^2 - 8*f2*f3*f6)*x2*x3*y1*y3 - 8*f1*f6*x2*x3*y1*y4 + (-8*f0*f5*f6 - 8*f1*f4*f6 + 
            2*f1*f5^2)*x2*x3*y2^2 + (-16*f0*f6^2 - 8*f1*f5*f6 - 16*f2*f4*f6 + 4*f2*f5^2)*x2*x3*y2*y3 - 8*f2*f6*x2*x3*y2*y4 + (-16*f1*f6^2 - 8*f3*f4*f6 + 
            2*f3*f5^2)*x2*x3*y3^2 - 8*f3*f6*x2*x3*y3*y4 - 4*f0*f5*x2*x4*y1^2 + (-8*f0*f6 - 2*f1*f5)*x2*x4*y1*y2 - 4*f2*f5*x2*x4*y1*y3 - 
            4*f1*f6*x2*x4*y2^2 - 8*f2*f6*x2*x4*y2*y3 - 4*f3*f6*x2*x4*y3^2 - 2*f5*x2*x4*y3*y4 + (-16*f0*f4*f6 + 4*f0*f5^2 + 4*f1*f3*f6)*x3^2*y1^2 - 
            8*f0*f5*f6*x3^2*y1*y2 + (16*f0*f6^2 - 8*f1*f5*f6 - 4*f3^2*f6)*x3^2*y1*y3 - 16*f0*f6^2*x3^2*y2^2 + (-16*f1*f6^2 - 8*f3*f4*f6 + 2*f3*f5^2)*x3^2*y2*y3 - 
            4*f3*f6*x3^2*y2*y4 + (-16*f2*f6^2 + 8*f3*f5*f6 - 16*f4^2*f6 + 4*f4*f5^2)*x3^2*y3^2 + (-16*f4*f6 + 4*f5^2)*x3^2*y3*y4 - 8*f0*f6*x3*x4*y1^2 - 
            4*f1*f6*x3*x4*y1*y2 + (-8*f2*f6 - 2*f3*f5)*x3*x4*y1*y3 - 8*f3*f6*x3*x4*y2*y3 - 2*f5*x3*x4*y2*y4 + (-16*f4*f6 + 4*f5^2)*x3*x4*y3^2 - 
            12*f6*x3*x4*y3*y4 + 2*x4^2*y1*y4
    ],
    [
        4*f0*f5*x1^2*y2^2 + (8*f0*f6 + 4*f1*f5)*x1^2*y2*y3 + (4*f1*f6 + 4*f2*f5)*x1^2*y3^2 + 2*f3*x1^2*y3*y4 - 8*f0*f5*x1*x2*y1*y2 + (-8*f0*f6 - 
            4*f1*f5)*x1*x2*y1*y3 + 4*f1*f6*x1*x2*y2*y3 + (8*f2*f6 + 2*f3*f5)*x1*x2*y3^2 + 4*f4*x1*x2*y3*y4 + 2*x1*x2*y4^2 + (-8*f0*f6 - 
            4*f1*f5)*x1*x3*y1*y2 + (-8*f1*f6 - 8*f2*f5)*x1*x3*y1*y3 - 2*f3*x1*x3*y1*y4 - 4*f1*f6*x1*x3*y2^2 + (-8*f2*f6 - 2*f3*f5)*x1*x3*y2*y3 - 
            4*f4*x1*x3*y2*y4 - 4*f5*x1*x3*y3*y4 - 2*f3*x1*x4*y1*y3 - 2*x1*x4*y2*y4 + 4*f5*x1*x4*y3^2 + 4*f0*f5*x2^2*y1^2 - 4*f1*f6*x2^2*y1*y3 
            + 4*f3*f6*x2^2*y3^2 + 2*f5*x2^2*y3*y4 + (8*f0*f6 + 4*f1*f5)*x2*x3*y1^2 + 4*f1*f6*x2*x3*y1*y2 + (-8*f2*f6 - 2*f3*f5)*x2*x3*y1*y3 - 
            8*f3*f6*x2*x3*y2*y3 - 2*f5*x2*x3*y2*y4 - 4*f6*x2*x3*y3*y4 - 4*f4*x2*x4*y1*y3 - 2*x2*x4*y1*y4 - 2*f5*x2*x4*y2*y3 + 
            4*f6*x2*x4*y3^2 + (4*f1*f6 + 4*f2*f5)*x3^2*y1^2 + (8*f2*f6 + 2*f3*f5)*x3^2*y1*y2 + 4*f5*x3^2*y1*y4 + 4*f3*f6*x3^2*y2^2 + 4*f6*x3^2*y2*y4 + 
            2*f3*x3*x4*y1^2 + 4*f4*x3*x4*y1*y2 - 4*f5*x3*x4*y1*y3 + 2*f5*x3*x4*y2^2 - 4*f6*x3*x4*y2*y3 + 2*x4^2*y1*y2,
        (-8*f0*f2 + 2*f1^2)*x1^2*y1^2 - 4*f0*f3*x1^2*y1*y2 - 2*f1*f3*x1^2*y1*y3 - 4*f0*x1^2*y1*y4 - 4*f0*f4*x1^2*y2^2 + (-4*f0*f5 - 4*f1*f4)*x1^2*y2*y3 - 
            2*f1*x1^2*y2*y4 + (-4*f0*f6 - 2*f1*f5 - 4*f2*f4 + f3^2)*x1^2*y3^2 - 4*f2*x1^2*y3*y4 - 4*f0*f3*x1*x2*y1^2 + 8*f0*f5*x1*x2*y1*y3 - 
            4*f0*f5*x1*x2*y2^2 - 4*f1*f5*x1*x2*y2*y3 + (-4*f1*f6 - 4*f2*f5)*x1*x2*y3^2 - 2*f3*x1*x2*y3*y4 - 2*f1*f3*x1*x3*y1^2 + 8*f0*f5*x1*x3*y1*y2
            + 8*f1*f5*x1*x3*y1*y3 + 8*f0*f6*x1*x3*y2^2 + 8*f1*f6*x1*x3*y2*y3 + 2*f3*x1*x3*y2*y4 - 2*f3*f5*x1*x3*y3^2 - 4*f0*x1*x4*y1^2 - 
            2*f3*x1*x4*y2*y3 - 4*f4*x1*x4*y3^2 - 4*x1*x4*y3*y4 - 4*f0*f4*x2^2*y1^2 - 4*f0*f5*x2^2*y1*y2 + 8*f0*f6*x2^2*y1*y3 - 8*f0*f6*x2^2*y2^2 - 
            4*f1*f6*x2^2*y2*y3 - 4*f2*f6*x2^2*y3^2 + x2^2*y4^2 + (-4*f0*f5 - 4*f1*f4)*x2*x3*y1^2 - 4*f1*f5*x2*x3*y1*y2 + 8*f1*f6*x2*x3*y1*y3 - 
            2*f3*x2*x3*y1*y4 - 4*f1*f6*x2*x3*y2^2 - 4*f3*f6*x2*x3*y3^2 - 2*f1*x2*x4*y1^2 + 2*f3*x2*x4*y1*y3 - 2*f5*x2*x4*y3^2 + (-4*f0*f6 - 2*f1*f5 - 
            4*f2*f4 + f3^2)*x3^2*y1^2 + (-4*f1*f6 - 4*f2*f5)*x3^2*y1*y2 - 2*f3*f5*x3^2*y1*y3 - 4*f4*x3^2*y1*y4 - 4*f2*f6*x3^2*y2^2 - 4*f3*f6*x3^2*y2*y3 - 
            2*f5*x3^2*y2*y4 + (-8*f4*f6 + 2*f5^2)*x3^2*y3^2 - 4*f6*x3^2*y3*y4 - 4*f2*x3*x4*y1^2 - 2*f3*x3*x4*y1*y2 - 4*x3*x4*y1*y4 - 
            4*f6*x3*x4*y3^2 + x4^2*y2^2,
        4*f0*f3*x1^2*y2^2 + (8*f0*f4 + 2*f1*f3)*x1^2*y2*y3 + 4*f0*x1^2*y2*y4 + (4*f0*f5 + 4*f1*f4)*x1^2*y3^2 + 4*f1*x1^2*y3*y4 - 8*f0*f3*x1*x2*y1*y2 + 
            (-8*f0*f4 - 2*f1*f3)*x1*x2*y1*y3 - 4*f0*x1*x2*y1*y4 + 4*f0*f5*x1*x2*y2*y3 - 2*f1*x1*x2*y2*y4 + (8*f0*f6 + 4*f1*f5)*x1*x2*y3^2 + (-8*f0*f4 - 
            2*f1*f3)*x1*x3*y1*y2 + (-8*f0*f5 - 8*f1*f4)*x1*x3*y1*y3 - 4*f1*x1*x3*y1*y4 - 4*f0*f5*x1*x3*y2^2 + (-8*f0*f6 - 4*f1*f5)*x1*x3*y2*y3 - 
            4*f2*x1*x3*y2*y4 - 2*f3*x1*x3*y3*y4 - 4*f0*x1*x4*y1*y2 - 4*f1*x1*x4*y1*y3 + 2*f1*x1*x4*y2^2 + 4*f2*x1*x4*y2*y3 + 
            2*f3*x1*x4*y3^2 + 4*f0*f3*x2^2*y1^2 - 4*f0*f5*x2^2*y1*y3 + 2*f1*x2^2*y1*y4 + 4*f1*f6*x2^2*y3^2 + (8*f0*f4 + 2*f1*f3)*x2*x3*y1^2 + 
            4*f0*f5*x2*x3*y1*y2 + (-8*f0*f6 - 4*f1*f5)*x2*x3*y1*y3 + 4*f2*x2*x3*y1*y4 - 8*f1*f6*x2*x3*y2*y3 + 2*x2*x3*y4^2 + 4*f0*x2*x4*y1^2 - 
            2*f1*x2*x4*y1*y2 - 4*f2*x2*x4*y1*y3 - 2*x2*x4*y3*y4 + (4*f0*f5 + 4*f1*f4)*x3^2*y1^2 + (8*f0*f6 + 4*f1*f5)*x3^2*y1*y2 + 2*f3*x3^2*y1*y4 + 
            4*f1*f6*x3^2*y2^2 + 4*f1*x3*x4*y1^2 - 2*f3*x3*x4*y1*y3 - 2*x3*x4*y2*y4 + 2*x4^2*y2*y3,
        (16*f0^2*f5 + 8*f0*f2*f3 - 2*f1^2*f3)*x1^2*y1^2 + (16*f0^2*f6 + 8*f0*f1*f5 + 4*f0*f3^2)*x1^2*y1*y2 + (-16*f0*f2*f5 + 8*f0*f3*f4 + 8*f1^2*f5)*x1^2*y1*y3 + 
            8*f0*f3*x1^2*y1*y4 + 8*f0*f1*f6*x1^2*y2^2 + (-16*f0*f2*f6 + 8*f1^2*f6)*x1^2*y2*y3 + 2*f1*f3*x1^2*y2*y4 - 2*f1*f3*f5*x1^2*y3^2 + (16*f0^2*f6 + 8*f0*f1*f5
            + 4*f0*f3^2)*x1*x2*y1^2 + (16*f0*f1*f6 + 8*f0*f3*f4 + 4*f1^2*f5)*x1*x2*y1*y2 + (-16*f0*f2*f6 - 16*f0*f3*f5 + 16*f0*f4^2 + 8*f1^2*f6 + 
            8*f1*f2*f5)*x1*x2*y1*y3 + (8*f0*f4 + 2*f1*f3)*x1*x2*y1*y4 + (4*f0*f3*f5 + 4*f1^2*f6)*x1*x2*y2^2 + (-24*f0*f3*f6 + 8*f0*f4*f5 + 8*f1*f2*f6 + 
            2*f1*f3*f5)*x1*x2*y2*y3 + 4*f1*f4*x1*x2*y2*y4 + (-16*f0*f4*f6 + 8*f0*f5^2)*x1*x2*y3^2 + (-8*f0*f6 + 4*f1*f5)*x1*x2*y3*y4 + (-16*f0*f2*f5 + 
            8*f0*f3*f4 + 8*f1^2*f5)*x1*x3*y1^2 + (-16*f0*f2*f6 - 16*f0*f3*f5 + 16*f0*f4^2 + 8*f1^2*f6 + 8*f1*f2*f5)*x1*x3*y1*y2 + (-8*f0*f3*f6 - 16*f1*f3*f5 + 16*f1*f4^2 + 
            16*f2^2*f5 - 8*f2*f3*f4 + 2*f3^3)*x1*x3*y1*y3 + (-8*f0*f5 + 8*f1*f4)*x1*x3*y1*y4 + (-16*f0*f3*f6 + 8*f0*f4*f5 + 8*f1*f2*f6)*x1*x3*y2^2 + (-16*f0*f4*f6 + 
            8*f0*f5^2 - 16*f1*f3*f6 + 8*f1*f4*f5 + 16*f2^2*f6)*x1*x3*y2*y3 + (-8*f0*f6 + 8*f2*f4 - 2*f3^2)*x1*x3*y2*y4 + (-16*f1*f4*f6 + 8*f1*f5^2 + 
            8*f2*f3*f6)*x1*x3*y3^2 + (-8*f1*f6 + 8*f2*f5)*x1*x3*y3*y4 + 8*f0*f3*x1*x4*y1^2 + (8*f0*f4 + 2*f1*f3)*x1*x4*y1*y2 + (-8*f0*f5 + 
            8*f1*f4)*x1*x4*y1*y3 + 4*f1*x1*x4*y1*y4 + 4*f0*f5*x1*x4*y2^2 + (-8*f0*f6 + 4*f1*f5)*x1*x4*y2*y3 + 4*f2*x1*x4*y2*y4 + 
            2*f3*x1*x4*y3*y4 + 8*f0*f1*f6*x2^2*y1^2 + (4*f0*f3*f5 + 4*f1^2*f6)*x2^2*y1*y2 + (-16*f0*f3*f6 + 8*f0*f4*f5 + 8*f1*f2*f6)*x2^2*y1*y3 + 
            4*f0*f5*x2^2*y1*y4 + 8*f0*f3*f6*x2^2*y2^2 + (4*f0*f5^2 + 4*f1*f3*f6)*x2^2*y2*y3 + 2*f1*f5*x2^2*y2*y4 + 8*f0*f5*f6*x2^2*y3^2 + 4*f1*f6*x2^2*y3*y4 +
            (-16*f0*f2*f6 + 8*f1^2*f6)*x2*x3*y1^2 + (-24*f0*f3*f6 + 8*f0*f4*f5 + 8*f1*f2*f6 + 2*f1*f3*f5)*x2*x3*y1*y2 + (-16*f0*f4*f6 + 8*f0*f5^2 - 16*f1*f3*f6 + 8*f1*f4*f5 + 
            16*f2^2*f6)*x2*x3*y1*y3 + (-8*f0*f6 + 4*f1*f5)*x2*x3*y1*y4 + (4*f0*f5^2 + 4*f1*f3*f6)*x2*x3*y2^2 + (16*f0*f5*f6 + 4*f1*f5^2 + 
            8*f2*f3*f6)*x2*x3*y2*y3 + 4*f2*f5*x2*x3*y2*y4 + (16*f0*f6^2 + 8*f1*f5*f6 + 4*f3^2*f6)*x2*x3*y3^2 + (8*f2*f6 + 2*f3*f5)*x2*x3*y3*y4 + 
            2*f1*f3*x2*x4*y1^2 + 4*f1*f4*x2*x4*y1*y2 + (-8*f0*f6 + 8*f2*f4 - 2*f3^2)*x2*x4*y1*y3 + 4*f2*x2*x4*y1*y4 + 2*f1*f5*x2*x4*y2^2 + 
            4*f2*f5*x2*x4*y2*y3 + 2*f3*x2*x4*y2*y4 + 2*f3*f5*x2*x4*y3^2 + 4*f4*x2*x4*y3*y4 + 2*x2*x4*y4^2 - 2*f1*f3*f5*x3^2*y1^2 + (-16*f0*f4*f6 + 
            8*f0*f5^2)*x3^2*y1*y2 + (-16*f1*f4*f6 + 8*f1*f5^2 + 8*f2*f3*f6)*x3^2*y1*y3 + 8*f0*f5*f6*x3^2*y2^2 + (16*f0*f6^2 + 8*f1*f5*f6 + 4*f3^2*f6)*x3^2*y2*y3 + 
            2*f3*f5*x3^2*y2*y4 + (16*f1*f6^2 + 8*f3*f4*f6 - 2*f3*f5^2)*x3^2*y3^2 + 8*f3*f6*x3^2*y3*y4 + (-8*f0*f6 + 4*f1*f5)*x3*x4*y1*y2 + (-8*f1*f6 + 
            8*f2*f5)*x3*x4*y1*y3 + 2*f3*x3*x4*y1*y4 + 4*f1*f6*x3*x4*y2^2 + (8*f2*f6 + 2*f3*f5)*x3*x4*y2*y3 + 4*f4*x3*x4*y2*y4 + 8*f3*f6*x3*x4*y3^2
            + 4*f5*x3*x4*y3*y4 + 2*x4^2*y2*y4
    ],
    [
        (8*f0*f2 - 2*f1^2)*x1^2*y1^2 + 4*f0*f3*x1^2*y1*y2 + 2*f1*f3*x1^2*y1*y3 + 4*f0*x1^2*y1*y4 - 4*f0*f5*x1^2*y2*y3 - 2*f1*f5*x1^2*y3^2 + 
            4*f0*f3*x1*x2*y1^2 + 8*f0*f4*x1*x2*y1*y2 + 4*f1*f4*x1*x2*y1*y3 + 2*f1*x1*x2*y1*y4 + 4*f0*f5*x1*x2*y2^2 + (-8*f0*f6 + 
            2*f1*f5)*x1*x2*y2*y3 - 4*f1*f6*x1*x2*y3^2 + 2*f1*f3*x1*x3*y1^2 + 4*f1*f4*x1*x3*y1*y2 + (8*f0*f6 + 8*f2*f4 - 2*f3^2)*x1*x3*y1*y3 + 
            4*f2*x1*x3*y1*y4 + 2*f1*f5*x1*x3*y2^2 + 4*f2*f5*x1*x3*y2*y3 + 2*f3*x1*x3*y2*y4 + 2*f3*f5*x1*x3*y3^2 + 4*f4*x1*x3*y3*y4 + 
            2*x1*x3*y4^2 + 4*f0*x1*x4*y1^2 + 2*f1*x1*x4*y1*y2 + 4*f2*x1*x4*y1*y3 + 2*x1*x4*y3*y4 + 4*f0*f5*x2^2*y1*y2 + 2*f1*f5*x2^2*y1*y3 + 
            8*f0*f6*x2^2*y2^2 + 4*f1*f6*x2^2*y2*y3 - 4*f0*f5*x2*x3*y1^2 + (-8*f0*f6 + 2*f1*f5)*x2*x3*y1*y2 + 4*f2*f5*x2*x3*y1*y3 + 4*f1*f6*x2*x3*y2^2 + 
            8*f2*f6*x2*x3*y2*y3 + 4*f3*f6*x2*x3*y3^2 + 2*f5*x2*x3*y3*y4 + 2*f3*x2*x4*y1*y3 - 2*x2*x4*y2*y4 - 2*f1*f5*x3^2*y1^2 - 
            4*f1*f6*x3^2*y1*y2 + 2*f3*f5*x3^2*y1*y3 + 4*f3*f6*x3^2*y2*y3 + (8*f4*f6 - 2*f5^2)*x3^2*y3^2 + 4*f6*x3^2*y3*y4 + 4*f4*x3*x4*y1*y3 + 
            2*x3*x4*y1*y4 + 2*f5*x3*x4*y2*y3 + 4*f6*x3*x4*y3^2 + 2*x4^2*y1*y3,
        4*f0*f3*x1^2*y2^2 + (8*f0*f4 + 2*f1*f3)*x1^2*y2*y3 + 4*f0*x1^2*y2*y4 + (4*f0*f5 + 4*f1*f4)*x1^2*y3^2 + 4*f1*x1^2*y3*y4 - 8*f0*f3*x1*x2*y1*y2 + 
            (-8*f0*f4 - 2*f1*f3)*x1*x2*y1*y3 - 4*f0*x1*x2*y1*y4 + 4*f0*f5*x1*x2*y2*y3 - 2*f1*x1*x2*y2*y4 + (8*f0*f6 + 4*f1*f5)*x1*x2*y3^2 + (-8*f0*f4 - 
            2*f1*f3)*x1*x3*y1*y2 + (-8*f0*f5 - 8*f1*f4)*x1*x3*y1*y3 - 4*f1*x1*x3*y1*y4 - 4*f0*f5*x1*x3*y2^2 + (-8*f0*f6 - 4*f1*f5)*x1*x3*y2*y3 - 
            4*f2*x1*x3*y2*y4 - 2*f3*x1*x3*y3*y4 - 4*f0*x1*x4*y1*y2 - 4*f1*x1*x4*y1*y3 + 2*f1*x1*x4*y2^2 + 4*f2*x1*x4*y2*y3 + 
            2*f3*x1*x4*y3^2 + 4*f0*f3*x2^2*y1^2 - 4*f0*f5*x2^2*y1*y3 + 2*f1*x2^2*y1*y4 + 4*f1*f6*x2^2*y3^2 + (8*f0*f4 + 2*f1*f3)*x2*x3*y1^2 + 
            4*f0*f5*x2*x3*y1*y2 + (-8*f0*f6 - 4*f1*f5)*x2*x3*y1*y3 + 4*f2*x2*x3*y1*y4 - 8*f1*f6*x2*x3*y2*y3 + 2*x2*x3*y4^2 + 4*f0*x2*x4*y1^2 - 
            2*f1*x2*x4*y1*y2 - 4*f2*x2*x4*y1*y3 - 2*x2*x4*y3*y4 + (4*f0*f5 + 4*f1*f4)*x3^2*y1^2 + (8*f0*f6 + 4*f1*f5)*x3^2*y1*y2 + 2*f3*x3^2*y1*y4 + 
            4*f1*f6*x3^2*y2^2 + 4*f1*x3*x4*y1^2 - 2*f3*x3*x4*y1*y3 - 2*x3*x4*y2*y4 + 2*x4^2*y2*y3,
        (-4*f0*f2 + f1^2)*x1^2*y2^2 - 4*f0*f3*x1^2*y2*y3 - 4*f0*f4*x1^2*y3^2 - 4*f0*x1^2*y3*y4 + (8*f0*f2 - 2*f1^2)*x1*x2*y1*y2 + 4*f0*f3*x1*x2*y1*y3 + 
            4*f0*x1*x2*y2*y4 - 4*f0*f5*x1*x2*y3^2 + 4*f0*f3*x1*x3*y1*y2 + 8*f0*f4*x1*x3*y1*y3 + 4*f0*x1*x3*y1*y4 + 4*f0*f5*x1*x3*y2*y3 + 
            2*f1*x1*x3*y2*y4 + 4*f0*x1*x4*y1*y3 - 4*f0*x1*x4*y2^2 - 2*f1*x1*x4*y2*y3 + (-4*f0*f2 + f1^2)*x2^2*y1^2 - 4*f0*x2^2*y1*y4 - 
            4*f0*f6*x2^2*y3^2 - 4*f0*f3*x2*x3*y1^2 + 4*f0*f5*x2*x3*y1*y3 - 2*f1*x2*x3*y1*y4 + 8*f0*f6*x2*x3*y2*y3 + 4*f0*x2*x4*y1*y2 + 
            2*f1*x2*x4*y1*y3 - 4*f0*f4*x3^2*y1^2 - 4*f0*f5*x3^2*y1*y2 - 4*f0*f6*x3^2*y2^2 + x3^2*y4^2 - 4*f0*x3*x4*y1^2 - 2*x3*x4*y3*y4 + 
            x4^2*y3^2,
        (-16*f0^2*f4 + 8*f0*f1*f3 - 16*f0*f2^2 + 4*f1^2*f2)*x1^2*y1^2 + (-16*f0^2*f5 - 8*f0*f2*f3 + 2*f1^2*f3)*x1^2*y1*y2 + (16*f0^2*f6 - 8*f0*f1*f5 - 4*f0*f3^2)*x1^2*y1*y3 +
            (-16*f0*f2 + 4*f1^2)*x1^2*y1*y4 - 16*f0^2*f6*x1^2*y2^2 - 8*f0*f1*f6*x1^2*y2*y3 - 4*f0*f3*x1^2*y2*y4 + (-16*f0*f2*f6 + 4*f0*f3*f5 + 4*f1^2*f6)*x1^2*y3^2 
            + (-16*f0^2*f5 - 8*f0*f2*f3 + 2*f1^2*f3)*x1*x2*y1^2 + (-16*f0^2*f6 - 8*f0*f1*f5 - 16*f0*f2*f4 + 4*f1^2*f4)*x1*x2*y1*y2 + (-8*f0*f3*f4 - 
            4*f1^2*f5)*x1*x2*y1*y3 - 8*f0*f3*x1*x2*y1*y4 + (-8*f0*f1*f6 - 8*f0*f2*f5 + 2*f1^2*f5)*x1*x2*y2^2 + (-8*f0*f3*f5 - 4*f1^2*f6)*x1*x2*y2*y3 - 
            8*f0*f4*x1*x2*y2*y4 - 8*f0*f3*f6*x1*x2*y3^2 - 8*f0*f5*x1*x2*y3*y4 + (16*f0^2*f6 - 8*f0*f1*f5 - 4*f0*f3^2)*x1*x3*y1^2 + (-8*f0*f3*f4 - 
            4*f1^2*f5)*x1*x3*y1*y2 + (-16*f0*f2*f6 + 16*f0*f3*f5 - 16*f0*f4^2 + 8*f1^2*f6 - 8*f1*f2*f5)*x1*x3*y1*y3 + (-8*f0*f4 - 2*f1*f3)*x1*x3*y1*y4 + (-4*f0*f3*f5 
            - 4*f1^2*f6)*x1*x3*y2^2 + (8*f0*f3*f6 - 8*f0*f4*f5 - 8*f1*f2*f6 - 2*f1*f3*f5)*x1*x3*y2*y3 - 4*f1*f4*x1*x3*y2*y4 + (16*f0*f4*f6 - 8*f0*f5^2 - 
            8*f1*f3*f6)*x1*x3*y3^2 + (8*f0*f6 - 4*f1*f5)*x1*x3*y3*y4 + (-16*f0*f2 + 4*f1^2)*x1*x4*y1^2 - 8*f0*f3*x1*x4*y1*y2 + (-8*f0*f4 - 
            2*f1*f3)*x1*x4*y1*y3 - 12*f0*x1*x4*y1*y4 - 4*f0*f5*x1*x4*y2*y3 - 2*f1*x1*x4*y2*y4 - 8*f0*f6*x1*x4*y3^2 - 16*f0^2*f6*x2^2*y1^2 + 
            (-8*f0*f1*f6 - 8*f0*f2*f5 + 2*f1^2*f5)*x2^2*y1*y2 + (-4*f0*f3*f5 - 4*f1^2*f6)*x2^2*y1*y3 + (-16*f0*f2*f6 + 4*f1^2*f6)*x2^2*y2^2 - 16*f0*f3*f6*x2^2*y2*y3 - 
            4*f0*f5*x2^2*y2*y4 + (-16*f0*f4*f6 + 4*f0*f5^2)*x2^2*y3^2 - 16*f0*f6*x2^2*y3*y4 - 8*f0*f1*f6*x2*x3*y1^2 + (-8*f0*f3*f5 - 4*f1^2*f6)*x2*x3*y1*y2 + 
            (8*f0*f3*f6 - 8*f0*f4*f5 - 8*f1*f2*f6 - 2*f1*f3*f5)*x2*x3*y1*y3 - 4*f0*f5*x2*x3*y1*y4 - 16*f0*f3*f6*x2*x3*y2^2 + (-32*f0*f4*f6 + 4*f0*f5^2 - 
            8*f1*f3*f6)*x2*x3*y2*y3 + (-8*f0*f6 - 2*f1*f5)*x2*x3*y2*y4 + (-8*f0*f5*f6 - 16*f1*f4*f6 + 4*f1*f5^2)*x2*x3*y3^2 - 12*f1*f6*x2*x3*y3*y4 - 
            4*f0*f3*x2*x4*y1^2 - 8*f0*f4*x2*x4*y1*y2 - 4*f1*f4*x2*x4*y1*y3 - 2*f1*x2*x4*y1*y4 - 4*f0*f5*x2*x4*y2^2 + (-8*f0*f6 - 
            2*f1*f5)*x2*x4*y2*y3 - 4*f1*f6*x2*x4*y3^2 + (-16*f0*f2*f6 + 4*f0*f3*f5 + 4*f1^2*f6)*x3^2*y1^2 - 8*f0*f3*f6*x3^2*y1*y2 + (16*f0*f4*f6 - 8*f0*f5^2 - 
            8*f1*f3*f6)*x3^2*y1*y3 - 8*f0*f6*x3^2*y1*y4 + (-16*f0*f4*f6 + 4*f0*f5^2)*x3^2*y2^2 + (-8*f0*f5*f6 - 16*f1*f4*f6 + 4*f1*f5^2)*x3^2*y2*y3 - 
            4*f1*f6*x3^2*y2*y4 + (-16*f0*f6^2 - 16*f2*f4*f6 + 4*f2*f5^2 + 4*f3^2*f6)*x3^2*y3^2 + (-8*f2*f6 + 2*f3*f5)*x3^2*y3*y4 - 8*f0*f5*x3*x4*y1*y2 + (8*f0*f6 - 
            4*f1*f5)*x3*x4*y1*y3 - 16*f0*f6*x3*x4*y2^2 - 12*f1*f6*x3*x4*y2*y3 + (-8*f2*f6 + 2*f3*f5)*x3*x4*y3^2 + 4*f4*x3*x4*y3*y4 + 2*x3*x4*y4^2 + 
            2*x4^2*y3*y4
    ],
    [
        (-16*f0^2*f6 - 16*f0*f2*f4 + 4*f0*f3^2 + 4*f1^2*f4)*x1^2*y1^2 + (-8*f0*f1*f6 - 16*f0*f2*f5 + 4*f1^2*f5)*x1^2*y1*y2 + (16*f0*f2*f6 - 8*f0*f3*f5 - 8*f1^2*f6)*x1^2*y1*y3
            + (-8*f0*f4 + 2*f1*f3)*x1^2*y1*y4 + (-16*f0*f2*f6 + 4*f1^2*f6)*x1^2*y2^2 - 8*f0*f3*f6*x1^2*y2*y3 - 4*f0*f5*x1^2*y2*y4 + (-16*f0*f4*f6 + 4*f0*f5^2 + 
            4*f1*f3*f6)*x1^2*y3^2 - 8*f0*f6*x1^2*y3*y4 + (-8*f0*f1*f6 - 16*f0*f2*f5 + 4*f1^2*f5)*x1*x2*y1^2 + (-32*f0*f2*f6 - 8*f0*f3*f5 + 4*f1^2*f6)*x1*x2*y1*y2 + 
            (8*f0*f3*f6 - 8*f0*f4*f5 - 8*f1*f2*f6 - 2*f1*f3*f5)*x1*x2*y1*y3 - 12*f0*f5*x1*x2*y1*y4 - 16*f0*f3*f6*x1*x2*y2^2 + (-4*f0*f5^2 - 
            8*f1*f3*f6)*x1*x2*y2*y3 + (-8*f0*f6 - 2*f1*f5)*x1*x2*y2*y4 - 8*f0*f5*f6*x1*x2*y3^2 - 4*f1*f6*x1*x2*y3*y4 + (16*f0*f2*f6 - 8*f0*f3*f5 - 
            8*f1^2*f6)*x1*x3*y1^2 + (8*f0*f3*f6 - 8*f0*f4*f5 - 8*f1*f2*f6 - 2*f1*f3*f5)*x1*x3*y1*y2 + (-16*f0*f4*f6 + 8*f0*f5^2 + 16*f1*f3*f6 - 8*f1*f4*f5 - 
            16*f2^2*f6)*x1*x3*y1*y3 + (8*f0*f6 - 4*f1*f5)*x1*x3*y1*y4 + (-4*f0*f5^2 - 4*f1*f3*f6)*x1*x3*y2^2 + (-4*f1*f5^2 - 8*f2*f3*f6)*x1*x3*y2*y3 - 
            4*f2*f5*x1*x3*y2*y4 + (16*f0*f6^2 - 8*f1*f5*f6 - 4*f3^2*f6)*x1*x3*y3^2 + (-8*f2*f6 - 2*f3*f5)*x1*x3*y3*y4 + (-8*f0*f4 + 2*f1*f3)*x1*x4*y1^2 - 
            12*f0*f5*x1*x4*y1*y2 + (8*f0*f6 - 4*f1*f5)*x1*x4*y1*y3 + 4*f2*x1*x4*y1*y4 - 16*f0*f6*x1*x4*y2^2 - 8*f1*f6*x1*x4*y2*y3 + 2*x1*x4*y4^2 +
            (-16*f0*f2*f6 + 4*f1^2*f6)*x2^2*y1^2 - 16*f0*f3*f6*x2^2*y1*y2 + (-4*f0*f5^2 - 4*f1*f3*f6)*x2^2*y1*y3 - 16*f0*f6*x2^2*y1*y4 + (-16*f0*f4*f6 + 
            4*f0*f5^2)*x2^2*y2^2 + (-8*f0*f5*f6 - 8*f1*f4*f6 + 2*f1*f5^2)*x2^2*y2*y3 - 4*f1*f6*x2^2*y2*y4 - 16*f0*f6^2*x2^2*y3^2 - 8*f0*f3*f6*x2*x3*y1^2 + 
            (-4*f0*f5^2 - 8*f1*f3*f6)*x2*x3*y1*y2 + (-4*f1*f5^2 - 8*f2*f3*f6)*x2*x3*y1*y3 - 8*f1*f6*x2*x3*y1*y4 + (-8*f0*f5*f6 - 8*f1*f4*f6 + 
            2*f1*f5^2)*x2*x3*y2^2 + (-16*f0*f6^2 - 8*f1*f5*f6 - 16*f2*f4*f6 + 4*f2*f5^2)*x2*x3*y2*y3 - 8*f2*f6*x2*x3*y2*y4 + (-16*f1*f6^2 - 8*f3*f4*f6 + 
            2*f3*f5^2)*x2*x3*y3^2 - 8*f3*f6*x2*x3*y3*y4 - 4*f0*f5*x2*x4*y1^2 + (-8*f0*f6 - 2*f1*f5)*x2*x4*y1*y2 - 4*f2*f5*x2*x4*y1*y3 - 
            4*f1*f6*x2*x4*y2^2 - 8*f2*f6*x2*x4*y2*y3 - 4*f3*f6*x2*x4*y3^2 - 2*f5*x2*x4*y3*y4 + (-16*f0*f4*f6 + 4*f0*f5^2 + 4*f1*f3*f6)*x3^2*y1^2 - 
            8*f0*f5*f6*x3^2*y1*y2 + (16*f0*f6^2 - 8*f1*f5*f6 - 4*f3^2*f6)*x3^2*y1*y3 - 16*f0*f6^2*x3^2*y2^2 + (-16*f1*f6^2 - 8*f3*f4*f6 + 2*f3*f5^2)*x3^2*y2*y3 - 
            4*f3*f6*x3^2*y2*y4 + (-16*f2*f6^2 + 8*f3*f5*f6 - 16*f4^2*f6 + 4*f4*f5^2)*x3^2*y3^2 + (-16*f4*f6 + 4*f5^2)*x3^2*y3*y4 - 8*f0*f6*x3*x4*y1^2 - 
            4*f1*f6*x3*x4*y1*y2 + (-8*f2*f6 - 2*f3*f5)*x3*x4*y1*y3 - 8*f3*f6*x3*x4*y2*y3 - 2*f5*x3*x4*y2*y4 + (-16*f4*f6 + 4*f5^2)*x3*x4*y3^2 - 
            12*f6*x3*x4*y3*y4 + 2*x4^2*y1*y4,
        (16*f0^2*f5 + 8*f0*f2*f3 - 2*f1^2*f3)*x1^2*y1^2 + (16*f0^2*f6 + 8*f0*f1*f5 + 4*f0*f3^2)*x1^2*y1*y2 + (-16*f0*f2*f5 + 8*f0*f3*f4 + 8*f1^2*f5)*x1^2*y1*y3 + 
            8*f0*f3*x1^2*y1*y4 + 8*f0*f1*f6*x1^2*y2^2 + (-16*f0*f2*f6 + 8*f1^2*f6)*x1^2*y2*y3 + 2*f1*f3*x1^2*y2*y4 - 2*f1*f3*f5*x1^2*y3^2 + (16*f0^2*f6 + 8*f0*f1*f5
            + 4*f0*f3^2)*x1*x2*y1^2 + (16*f0*f1*f6 + 8*f0*f3*f4 + 4*f1^2*f5)*x1*x2*y1*y2 + (-16*f0*f2*f6 - 16*f0*f3*f5 + 16*f0*f4^2 + 8*f1^2*f6 + 
            8*f1*f2*f5)*x1*x2*y1*y3 + (8*f0*f4 + 2*f1*f3)*x1*x2*y1*y4 + (4*f0*f3*f5 + 4*f1^2*f6)*x1*x2*y2^2 + (-24*f0*f3*f6 + 8*f0*f4*f5 + 8*f1*f2*f6 + 
            2*f1*f3*f5)*x1*x2*y2*y3 + 4*f1*f4*x1*x2*y2*y4 + (-16*f0*f4*f6 + 8*f0*f5^2)*x1*x2*y3^2 + (-8*f0*f6 + 4*f1*f5)*x1*x2*y3*y4 + (-16*f0*f2*f5 + 
            8*f0*f3*f4 + 8*f1^2*f5)*x1*x3*y1^2 + (-16*f0*f2*f6 - 16*f0*f3*f5 + 16*f0*f4^2 + 8*f1^2*f6 + 8*f1*f2*f5)*x1*x3*y1*y2 + (-8*f0*f3*f6 - 16*f1*f3*f5 + 16*f1*f4^2 + 
            16*f2^2*f5 - 8*f2*f3*f4 + 2*f3^3)*x1*x3*y1*y3 + (-8*f0*f5 + 8*f1*f4)*x1*x3*y1*y4 + (-16*f0*f3*f6 + 8*f0*f4*f5 + 8*f1*f2*f6)*x1*x3*y2^2 + (-16*f0*f4*f6 + 
            8*f0*f5^2 - 16*f1*f3*f6 + 8*f1*f4*f5 + 16*f2^2*f6)*x1*x3*y2*y3 + (-8*f0*f6 + 8*f2*f4 - 2*f3^2)*x1*x3*y2*y4 + (-16*f1*f4*f6 + 8*f1*f5^2 + 
            8*f2*f3*f6)*x1*x3*y3^2 + (-8*f1*f6 + 8*f2*f5)*x1*x3*y3*y4 + 8*f0*f3*x1*x4*y1^2 + (8*f0*f4 + 2*f1*f3)*x1*x4*y1*y2 + (-8*f0*f5 + 
            8*f1*f4)*x1*x4*y1*y3 + 4*f1*x1*x4*y1*y4 + 4*f0*f5*x1*x4*y2^2 + (-8*f0*f6 + 4*f1*f5)*x1*x4*y2*y3 + 4*f2*x1*x4*y2*y4 + 
            2*f3*x1*x4*y3*y4 + 8*f0*f1*f6*x2^2*y1^2 + (4*f0*f3*f5 + 4*f1^2*f6)*x2^2*y1*y2 + (-16*f0*f3*f6 + 8*f0*f4*f5 + 8*f1*f2*f6)*x2^2*y1*y3 + 
            4*f0*f5*x2^2*y1*y4 + 8*f0*f3*f6*x2^2*y2^2 + (4*f0*f5^2 + 4*f1*f3*f6)*x2^2*y2*y3 + 2*f1*f5*x2^2*y2*y4 + 8*f0*f5*f6*x2^2*y3^2 + 4*f1*f6*x2^2*y3*y4 +
            (-16*f0*f2*f6 + 8*f1^2*f6)*x2*x3*y1^2 + (-24*f0*f3*f6 + 8*f0*f4*f5 + 8*f1*f2*f6 + 2*f1*f3*f5)*x2*x3*y1*y2 + (-16*f0*f4*f6 + 8*f0*f5^2 - 16*f1*f3*f6 + 8*f1*f4*f5 + 
            16*f2^2*f6)*x2*x3*y1*y3 + (-8*f0*f6 + 4*f1*f5)*x2*x3*y1*y4 + (4*f0*f5^2 + 4*f1*f3*f6)*x2*x3*y2^2 + (16*f0*f5*f6 + 4*f1*f5^2 + 
            8*f2*f3*f6)*x2*x3*y2*y3 + 4*f2*f5*x2*x3*y2*y4 + (16*f0*f6^2 + 8*f1*f5*f6 + 4*f3^2*f6)*x2*x3*y3^2 + (8*f2*f6 + 2*f3*f5)*x2*x3*y3*y4 + 
            2*f1*f3*x2*x4*y1^2 + 4*f1*f4*x2*x4*y1*y2 + (-8*f0*f6 + 8*f2*f4 - 2*f3^2)*x2*x4*y1*y3 + 4*f2*x2*x4*y1*y4 + 2*f1*f5*x2*x4*y2^2 + 
            4*f2*f5*x2*x4*y2*y3 + 2*f3*x2*x4*y2*y4 + 2*f3*f5*x2*x4*y3^2 + 4*f4*x2*x4*y3*y4 + 2*x2*x4*y4^2 - 2*f1*f3*f5*x3^2*y1^2 + (-16*f0*f4*f6 + 
            8*f0*f5^2)*x3^2*y1*y2 + (-16*f1*f4*f6 + 8*f1*f5^2 + 8*f2*f3*f6)*x3^2*y1*y3 + 8*f0*f5*f6*x3^2*y2^2 + (16*f0*f6^2 + 8*f1*f5*f6 + 4*f3^2*f6)*x3^2*y2*y3 + 
            2*f3*f5*x3^2*y2*y4 + (16*f1*f6^2 + 8*f3*f4*f6 - 2*f3*f5^2)*x3^2*y3^2 + 8*f3*f6*x3^2*y3*y4 + (-8*f0*f6 + 4*f1*f5)*x3*x4*y1*y2 + (-8*f1*f6 + 
            8*f2*f5)*x3*x4*y1*y3 + 2*f3*x3*x4*y1*y4 + 4*f1*f6*x3*x4*y2^2 + (8*f2*f6 + 2*f3*f5)*x3*x4*y2*y3 + 4*f4*x3*x4*y2*y4 + 8*f3*f6*x3*x4*y3^2
            + 4*f5*x3*x4*y3*y4 + 2*x4^2*y2*y4,
        (-16*f0^2*f4 + 8*f0*f1*f3 - 16*f0*f2^2 + 4*f1^2*f2)*x1^2*y1^2 + (-16*f0^2*f5 - 8*f0*f2*f3 + 2*f1^2*f3)*x1^2*y1*y2 + (16*f0^2*f6 - 8*f0*f1*f5 - 4*f0*f3^2)*x1^2*y1*y3 +
            (-16*f0*f2 + 4*f1^2)*x1^2*y1*y4 - 16*f0^2*f6*x1^2*y2^2 - 8*f0*f1*f6*x1^2*y2*y3 - 4*f0*f3*x1^2*y2*y4 + (-16*f0*f2*f6 + 4*f0*f3*f5 + 4*f1^2*f6)*x1^2*y3^2 
            + (-16*f0^2*f5 - 8*f0*f2*f3 + 2*f1^2*f3)*x1*x2*y1^2 + (-16*f0^2*f6 - 8*f0*f1*f5 - 16*f0*f2*f4 + 4*f1^2*f4)*x1*x2*y1*y2 + (-8*f0*f3*f4 - 
            4*f1^2*f5)*x1*x2*y1*y3 - 8*f0*f3*x1*x2*y1*y4 + (-8*f0*f1*f6 - 8*f0*f2*f5 + 2*f1^2*f5)*x1*x2*y2^2 + (-8*f0*f3*f5 - 4*f1^2*f6)*x1*x2*y2*y3 - 
            8*f0*f4*x1*x2*y2*y4 - 8*f0*f3*f6*x1*x2*y3^2 - 8*f0*f5*x1*x2*y3*y4 + (16*f0^2*f6 - 8*f0*f1*f5 - 4*f0*f3^2)*x1*x3*y1^2 + (-8*f0*f3*f4 - 
            4*f1^2*f5)*x1*x3*y1*y2 + (-16*f0*f2*f6 + 16*f0*f3*f5 - 16*f0*f4^2 + 8*f1^2*f6 - 8*f1*f2*f5)*x1*x3*y1*y3 + (-8*f0*f4 - 2*f1*f3)*x1*x3*y1*y4 + (-4*f0*f3*f5 
            - 4*f1^2*f6)*x1*x3*y2^2 + (8*f0*f3*f6 - 8*f0*f4*f5 - 8*f1*f2*f6 - 2*f1*f3*f5)*x1*x3*y2*y3 - 4*f1*f4*x1*x3*y2*y4 + (16*f0*f4*f6 - 8*f0*f5^2 - 
            8*f1*f3*f6)*x1*x3*y3^2 + (8*f0*f6 - 4*f1*f5)*x1*x3*y3*y4 + (-16*f0*f2 + 4*f1^2)*x1*x4*y1^2 - 8*f0*f3*x1*x4*y1*y2 + (-8*f0*f4 - 
            2*f1*f3)*x1*x4*y1*y3 - 12*f0*x1*x4*y1*y4 - 4*f0*f5*x1*x4*y2*y3 - 2*f1*x1*x4*y2*y4 - 8*f0*f6*x1*x4*y3^2 - 16*f0^2*f6*x2^2*y1^2 + 
            (-8*f0*f1*f6 - 8*f0*f2*f5 + 2*f1^2*f5)*x2^2*y1*y2 + (-4*f0*f3*f5 - 4*f1^2*f6)*x2^2*y1*y3 + (-16*f0*f2*f6 + 4*f1^2*f6)*x2^2*y2^2 - 16*f0*f3*f6*x2^2*y2*y3 - 
            4*f0*f5*x2^2*y2*y4 + (-16*f0*f4*f6 + 4*f0*f5^2)*x2^2*y3^2 - 16*f0*f6*x2^2*y3*y4 - 8*f0*f1*f6*x2*x3*y1^2 + (-8*f0*f3*f5 - 4*f1^2*f6)*x2*x3*y1*y2 + 
            (8*f0*f3*f6 - 8*f0*f4*f5 - 8*f1*f2*f6 - 2*f1*f3*f5)*x2*x3*y1*y3 - 4*f0*f5*x2*x3*y1*y4 - 16*f0*f3*f6*x2*x3*y2^2 + (-32*f0*f4*f6 + 4*f0*f5^2 - 
            8*f1*f3*f6)*x2*x3*y2*y3 + (-8*f0*f6 - 2*f1*f5)*x2*x3*y2*y4 + (-8*f0*f5*f6 - 16*f1*f4*f6 + 4*f1*f5^2)*x2*x3*y3^2 - 12*f1*f6*x2*x3*y3*y4 - 
            4*f0*f3*x2*x4*y1^2 - 8*f0*f4*x2*x4*y1*y2 - 4*f1*f4*x2*x4*y1*y3 - 2*f1*x2*x4*y1*y4 - 4*f0*f5*x2*x4*y2^2 + (-8*f0*f6 - 
            2*f1*f5)*x2*x4*y2*y3 - 4*f1*f6*x2*x4*y3^2 + (-16*f0*f2*f6 + 4*f0*f3*f5 + 4*f1^2*f6)*x3^2*y1^2 - 8*f0*f3*f6*x3^2*y1*y2 + (16*f0*f4*f6 - 8*f0*f5^2 - 
            8*f1*f3*f6)*x3^2*y1*y3 - 8*f0*f6*x3^2*y1*y4 + (-16*f0*f4*f6 + 4*f0*f5^2)*x3^2*y2^2 + (-8*f0*f5*f6 - 16*f1*f4*f6 + 4*f1*f5^2)*x3^2*y2*y3 - 
            4*f1*f6*x3^2*y2*y4 + (-16*f0*f6^2 - 16*f2*f4*f6 + 4*f2*f5^2 + 4*f3^2*f6)*x3^2*y3^2 + (-8*f2*f6 + 2*f3*f5)*x3^2*y3*y4 - 8*f0*f5*x3*x4*y1*y2 + (8*f0*f6 - 
            4*f1*f5)*x3*x4*y1*y3 - 16*f0*f6*x3*x4*y2^2 - 12*f1*f6*x3*x4*y2*y3 + (-8*f2*f6 + 2*f3*f5)*x3*x4*y3^2 + 4*f4*x3*x4*y3*y4 + 2*x3*x4*y4^2 + 
            2*x4^2*y3*y4,
        (16*f0^2*f2*f6 - 16*f0^2*f3*f5 + 16*f0^2*f4^2 - 4*f0*f1^2*f6 + 8*f0*f1*f2*f5 - 8*f0*f1*f3*f4 + 16*f0*f2^2*f4 - 4*f0*f2*f3^2 - 2*f1^3*f5 - 4*f1^2*f2*f4 + f1^2*f3^2)*x1^2*y1^2 + 
            (-16*f0^2*f3*f6 + 16*f0^2*f4*f5 + 16*f0*f1*f2*f6 - 8*f0*f1*f3*f5 + 16*f0*f2^2*f5 - 4*f1^3*f6 - 4*f1^2*f2*f5)*x1^2*y1*y2 + (-32*f0^2*f4*f6 + 16*f0^2*f5^2 + 8*f0*f1*f3*f6 + 
            8*f0*f2*f3*f5 - 2*f1^2*f3*f5)*x1^2*y1*y3 + (16*f0*f2*f4 - 4*f0*f3^2 - 4*f1^2*f4)*x1^2*y1*y4 + (16*f0^2*f4*f6 - 8*f0*f1*f3*f6 + 16*f0*f2^2*f6 - 
            4*f1^2*f2*f6)*x1^2*y2^2 + (16*f0^2*f5*f6 + 16*f0*f2*f3*f6 - 4*f1^2*f3*f6)*x1^2*y2*y3 + (8*f0*f2*f5 - 2*f1^2*f5)*x1^2*y2*y4 + (16*f0^2*f6^2 + 32*f0*f2*f4*f6 - 
            8*f0*f2*f5^2 - 4*f0*f3^2*f6 - 8*f1^2*f4*f6 + 2*f1^2*f5^2)*x1^2*y3^2 + (16*f0*f2*f6 - 4*f1^2*f6)*x1^2*y3*y4 + (-16*f0^2*f3*f6 + 16*f0^2*f4*f5 + 16*f0*f1*f2*f6 - 
            8*f0*f1*f3*f5 + 16*f0*f2^2*f5 - 4*f1^3*f6 - 4*f1^2*f2*f5)*x1*x2*y1^2 + (16*f0^2*f5^2 - 8*f0*f1*f3*f6 + 32*f0*f2^2*f6 + 8*f0*f2*f3*f5 - 8*f1^2*f2*f6 - 
            2*f1^2*f3*f5)*x1*x2*y1*y2 + (16*f0^2*f5*f6 - 16*f0*f1*f4*f6 + 8*f0*f1*f5^2 + 16*f0*f2*f3*f6 + 4*f0*f3^2*f5)*x1*x2*y1*y3 + (16*f0*f2*f5 - 
            4*f1^2*f5)*x1*x2*y1*y4 + (16*f0^2*f5*f6 + 16*f0*f2*f3*f6 - 4*f1^2*f3*f6)*x1*x2*y2^2 + (32*f0^2*f6^2 + 8*f0*f1*f5*f6 + 16*f0*f3^2*f6)*x1*x2*y2*y3 + 
            (16*f0*f2*f6 + 4*f0*f3*f5 - 4*f1^2*f6)*x1*x2*y2*y4 + (16*f0*f1*f6^2 + 16*f0*f3*f4*f6 - 4*f0*f3*f5^2)*x1*x2*y3^2 + 16*f0*f3*f6*x1*x2*y3*y4 + (-32*f0^2*f4*f6 
            + 16*f0^2*f5^2 + 8*f0*f1*f3*f6 + 8*f0*f2*f3*f5 - 2*f1^2*f3*f5)*x1*x3*y1^2 + (16*f0^2*f5*f6 - 16*f0*f1*f4*f6 + 8*f0*f1*f5^2 + 16*f0*f2*f3*f6 + 
            4*f0*f3^2*f5)*x1*x3*y1*y2 + (32*f0^2*f6^2 + 32*f0*f2*f4*f6 - 16*f0*f2*f5^2 - 8*f0*f3^2*f6 + 8*f0*f3*f4*f5 - 16*f1^2*f4*f6 + 8*f1^2*f5^2 + 
            8*f1*f2*f3*f6)*x1*x3*y1*y3 + 8*f0*f3*f5*x1*x3*y1*y4 + (8*f0*f1*f5*f6 + 8*f0*f3^2*f6)*x1*x3*y2^2 + (16*f0*f1*f6^2 - 16*f0*f2*f5*f6 + 16*f0*f3*f4*f6 + 
            8*f1^2*f5*f6 + 4*f1*f3^2*f6)*x1*x3*y2*y3 + (8*f0*f3*f6 + 2*f1*f3*f5)*x1*x3*y2*y4 + (-32*f0*f2*f6^2 + 8*f0*f3*f5*f6 + 16*f1^2*f6^2 + 8*f1*f3*f4*f6 - 
            2*f1*f3*f5^2)*x1*x3*y3^2 + 8*f1*f3*f6*x1*x3*y3*y4 + (16*f0*f2*f4 - 4*f0*f3^2 - 4*f1^2*f4)*x1*x4*y1^2 + (16*f0*f2*f5 - 4*f1^2*f5)*x1*x4*y1*y2 + 
            8*f0*f3*f5*x1*x4*y1*y3 + (8*f0*f4 - 2*f1*f3)*x1*x4*y1*y4 + (16*f0*f2*f6 - 4*f1^2*f6)*x1*x4*y2^2 + 16*f0*f3*f6*x1*x4*y2*y3 + 
            4*f0*f5*x1*x4*y2*y4 + (16*f0*f4*f6 - 4*f0*f5^2)*x1*x4*y3^2 + 8*f0*f6*x1*x4*y3*y4 + (16*f0^2*f4*f6 - 8*f0*f1*f3*f6 + 16*f0*f2^2*f6 - 
            4*f1^2*f2*f6)*x2^2*y1^2 + (16*f0^2*f5*f6 + 16*f0*f2*f3*f6 - 4*f1^2*f3*f6)*x2^2*y1*y2 + (8*f0*f1*f5*f6 + 8*f0*f3^2*f6)*x2^2*y1*y3 + (16*f0*f2*f6 - 
            4*f1^2*f6)*x2^2*y1*y4 + (16*f0^2*f6^2 + 16*f0*f2*f4*f6 - 4*f0*f2*f5^2 - 4*f1^2*f4*f6 + f1^2*f5^2)*x2^2*y2^2 + (16*f0*f1*f6^2 + 16*f0*f3*f4*f6 - 
            4*f0*f3*f5^2)*x2^2*y2*y3 + 8*f0*f3*f6*x2^2*y2*y4 + (16*f0*f2*f6^2 - 8*f0*f3*f5*f6 + 16*f0*f4^2*f6 - 4*f0*f4*f5^2)*x2^2*y3^2 + (16*f0*f4*f6 - 
            4*f0*f5^2)*x2^2*y3*y4 + (16*f0^2*f5*f6 + 16*f0*f2*f3*f6 - 4*f1^2*f3*f6)*x2*x3*y1^2 + (32*f0^2*f6^2 + 8*f0*f1*f5*f6 + 16*f0*f3^2*f6)*x2*x3*y1*y2 + 
            (16*f0*f1*f6^2 - 16*f0*f2*f5*f6 + 16*f0*f3*f4*f6 + 8*f1^2*f5*f6 + 4*f1*f3^2*f6)*x2*x3*y1*y3 + 16*f0*f3*f6*x2*x3*y1*y4 + (16*f0*f1*f6^2 + 16*f0*f3*f4*f6 - 
            4*f0*f3*f5^2)*x2*x3*y2^2 + (-8*f0*f3*f5*f6 + 32*f0*f4^2*f6 - 8*f0*f4*f5^2 + 16*f1^2*f6^2 + 8*f1*f3*f4*f6 - 2*f1*f3*f5^2)*x2*x3*y2*y3 + (16*f0*f4*f6 - 4*f0*f5^2 + 
            4*f1*f3*f6)*x2*x3*y2*y4 + (-16*f0*f3*f6^2 + 16*f0*f4*f5*f6 - 4*f0*f5^3 + 16*f1*f2*f6^2 - 8*f1*f3*f5*f6 + 16*f1*f4^2*f6 - 4*f1*f4*f5^2)*x2*x3*y3^2 + (16*f1*f4*f6 - 
            4*f1*f5^2)*x2*x3*y3*y4 + (8*f0*f2*f5 - 2*f1^2*f5)*x2*x4*y1^2 + (16*f0*f2*f6 + 4*f0*f3*f5 - 4*f1^2*f6)*x2*x4*y1*y2 + (8*f0*f3*f6 + 
            2*f1*f3*f5)*x2*x4*y1*y3 + 4*f0*f5*x2*x4*y1*y4 + 8*f0*f3*f6*x2*x4*y2^2 + (16*f0*f4*f6 - 4*f0*f5^2 + 4*f1*f3*f6)*x2*x4*y2*y3 + 
            8*f0*f6*x2*x4*y2*y4 + (8*f1*f4*f6 - 2*f1*f5^2)*x2*x4*y3^2 + 4*f1*f6*x2*x4*y3*y4 + (16*f0^2*f6^2 + 32*f0*f2*f4*f6 - 8*f0*f2*f5^2 - 4*f0*f3^2*f6 - 
            8*f1^2*f4*f6 + 2*f1^2*f5^2)*x3^2*y1^2 + (16*f0*f1*f6^2 + 16*f0*f3*f4*f6 - 4*f0*f3*f5^2)*x3^2*y1*y2 + (-32*f0*f2*f6^2 + 8*f0*f3*f5*f6 + 16*f1^2*f6^2 + 8*f1*f3*f4*f6 - 
            2*f1*f3*f5^2)*x3^2*y1*y3 + (16*f0*f4*f6 - 4*f0*f5^2)*x3^2*y1*y4 + (16*f0*f2*f6^2 - 8*f0*f3*f5*f6 + 16*f0*f4^2*f6 - 4*f0*f4*f5^2)*x3^2*y2^2 + (-16*f0*f3*f6^2 + 
            16*f0*f4*f5*f6 - 4*f0*f5^3 + 16*f1*f2*f6^2 - 8*f1*f3*f5*f6 + 16*f1*f4^2*f6 - 4*f1*f4*f5^2)*x3^2*y2*y3 + (8*f1*f4*f6 - 2*f1*f5^2)*x3^2*y2*y4 + (16*f0*f4*f6^2 - 
            4*f0*f5^2*f6 - 16*f1*f3*f6^2 + 8*f1*f4*f5*f6 - 2*f1*f5^3 + 16*f2^2*f6^2 - 8*f2*f3*f5*f6 + 16*f2*f4^2*f6 - 4*f2*f4*f5^2 - 4*f3^2*f4*f6 + f3^2*f5^2)*x3^2*y3^2 + (16*f2*f4*f6 - 
            4*f2*f5^2 - 4*f3^2*f6)*x3^2*y3*y4 + (16*f0*f2*f6 - 4*f1^2*f6)*x3*x4*y1^2 + 16*f0*f3*f6*x3*x4*y1*y2 + 8*f1*f3*f6*x3*x4*y1*y3 + 
            8*f0*f6*x3*x4*y1*y4 + (16*f0*f4*f6 - 4*f0*f5^2)*x3*x4*y2^2 + (16*f1*f4*f6 - 4*f1*f5^2)*x3*x4*y2*y3 + 4*f1*f6*x3*x4*y2*y4 + (16*f2*f4*f6 - 4*f2*f5^2 
            - 4*f3^2*f6)*x3*x4*y3^2 + (8*f2*f6 - 2*f3*f5)*x3*x4*y3*y4 + x4^2*y4^2]]
	return bbmatrix

